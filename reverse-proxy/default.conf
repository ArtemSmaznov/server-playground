upstream home-assistant {
    server homeassistant:8123;
}

upstream app1 {
    server app1:8080;
}

upstream app2 {
    server app2:8080;
    keepalive 32;
}

upstream nextcloud-server {
    server nextcloud-server:80;
}

upstream plex-media-server {
    server plex-media-server:32400;
}

#===============================================================================

server {
    listen       80;
    server_name  art-s.tplinkdns.com;

    # Do not HTTPS redirect Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        auth_basic off;
        auth_request off;
        allow all;

        root /usr/share/nginx/html;
        try_files $uri =404;
        break;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen       443 ssl http2;
    server_name  art-s.tplinkdns.com;
    client_max_body_size 500M;
    send_timeout 100m;

    # ssl
    # ssl_session_timeout 5m;
    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS-CHACHA20-POLY1305-SHA256:TLS-AES-256-GCM-SHA384:TLS-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_certificate /etc/nginx/certs/art-s.tplinkdns.com.crt;
    ssl_certificate_key /etc/nginx/certs/art-s.tplinkdns.com.key;
    ssl_dhparam /etc/nginx/certs/art-s.tplinkdns.com.dhparam.pem;
    ssl_trusted_certificate /etc/nginx/certs/art-s.tplinkdns.com.chain.pem;

    add_header Strict-Transport-Security max-age=15768000;
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header X-Frame-Options deny;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    # add_header Permissions-Policy "geolocation=(self), midi=(self), sync-xhr=(self), microphone=(self), camera=(self), magnetometer=(self), gyroscope=(self), fullscreen=(self), payment=(self)";
    # # Pay attention to how many domains we need to allow
    # add_header Content-Security-Policy "default-src 'none'; base-uri 'self' art-s.tplinkdns.com; font-src 'self' data: art-s.tplinkdns.com; media-src 'self' data: blob: art-s.tplinkdns.com https://*.plex.direct:32400 https://video.internetvideoarchive.net https://*.cloudfront.net; script-src 'self' 'unsafe-inline' 'unsafe-eval' domain.com art-s.tplinkdns.com; style-src 'self' 'unsafe-inline' art-s.tplinkdns.com; img-src 'self' data: blob: https: art-s.tplinkdns.com; worker-src * blob:; frame-src 'self'; connect-src 'self' https: domain.com art-s.tplinkdns.com wss://*.plex.direct:32400 wss://pubsub.plex.tv; object-src 'self' art-s.tplinkdns.com; frame-ancestors 'self' domain.com art-s.tplinkdns.com; form-action 'self' art-s.tplinkdns.com; manifest-src 'self' art-s.tplinkdns.com; script-src-elem 'self' 'unsafe-inline' domain.com art-s.tplinkdns.com www.gstatic.com";

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
    gzip_disable "MSIE [1-6]\.";

    # HTTP 1.1 support
    proxy_http_version 1.1;
    proxy_set_header Host $host; # Forward real ip and host to Plex
    proxy_set_header X-Real-IP $remote_addr; # Forward real ip and host to Plex
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
    proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
    proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

    # Disables compression between Plex and Nginx, required if using sub_filter below.
    # May also improve loading time by a very marginal amount, as nginx will compress anyway.
    #proxy_set_header Accept-Encoding "";

    # Mitigate httpoxy attack (see README for details)
    # proxy_set_header Proxy "";

    # Disable buffering - send to the client as soon as the data is received from Plex.
    proxy_redirect off;
    proxy_buffering off;

    location ~* ^/app1/(.*)$ {
        proxy_pass http://app1/$1$is_args$args;
    }

    location ~* ^/app2/(.*)$ {
        proxy_pass http://app2/$1$is_args$args;
    }

    location ~* ^/nextcloud/(.*)$ {
        proxy_pass http://nextcloud-server/$1$is_args$args;
    }

    location ~* ^/homeassistant/(.*)$ {
        proxy_pass https://home-assistant/$1$is_args$args;
    }

    location ~* ^/plex/(.*)$ {
        proxy_pass http://plex-media-server/$1$is_args$args;

        # Set headers for Plex server.
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    location / {
        # return 404;
        proxy_pass https://homeassistant:8123/$args;
    }
}
