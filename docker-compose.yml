version: '3'

volumes:
  db:
  certs:
  acme:
  html:

networks:
  proxy-tier:

services:

  proxy:
    container_name: 'reverse-proxy'
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:z,ro
      - html:/usr/share/nginx/html:z
      - ./reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf:z,ro
      - /var/run/docker.sock:/tmp/docker.sock:z,ro
    networks:
      - proxy-tier

  nextcloud-server:
    image: nginx:alpine
    container_name: 'nextcloud-server'
    restart: always
    depends_on:
      - nextcloud-app
    ports:
      - 8080:80
    env_file:
      - secrets/domain.env
    volumes:
      - /home/nextcloud2:/var/www/html:z,ro
      - ./nextcloud/server/nginx.conf:/etc/nginx/nginx.conf:z,ro
    networks:
      - proxy-tier
      - default

  nextcloud-app:
    image: nextcloud:fpm-alpine
    container_name: 'nextcloud-app'
    restart: always
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
    env_file:
      - secrets/db.env
    volumes:
      - /home/nextcloud2:/var/www/html:z

  nextcloud-cron:
    image: nextcloud:fpm-alpine
    container_name: 'nextcloud-cron'
    restart: always
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    entrypoint: /cron.sh
    volumes:
      - /home/nextcloud2:/var/www/html:z

  nextcloud-db:
    image: mariadb
    container_name: 'nextcloud-db'
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - secrets/db.env
      - secrets/db-root.env
    volumes:
      - db:/var/lib/mysql:Z

  nextcloud-redis:
    image: redis:alpine
    container_name: 'nextcloud-redis'
    restart: always

  app1:
    container_name: "app1"
    image: nginx
    restart: always
    volumes:
      - ./app1/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app1/www:/var/www:ro
    networks:
      - proxy-tier

  app2:
    container_name: "app2"
    image: nginx
    restart: always
    volumes:
      - ./app2/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app2/www:/var/www:ro
    networks:
      - proxy-tier

  plex-media-server:
    container_name: 'plex-media-server'
    hostname: 'plex-media-server'
    image: plexinc/pms-docker
    restart: unless-stopped
    ports:
      - 32400:32400
    # env_file:
    #   - secrets/plex.env
    environment:
      - TZ=America/Toronto
    networks:
      - proxy-tier

  hello-world:
    container_name: "hello-world"
    image: nginx
    restart: always
    ports:
      - 8085:80
    networks:
      - proxy-tier
