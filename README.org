#+TITLE: Reverse Proxy with Plex
#+AUTHOR: Artem Smaznov
#+DESCRIPTION: Testing manual reverse proxy setup with plex as actual app
#+STARTUP: overview
#+auto_tangle: t

* Working
+ [[http://localhost/app1/]] opens app1 app correctly with working link
+ [[http://localhost/app2/]] opens app2 app correctly with working link
+ [[http://localhost:32400]] opens plex just fine

* Not working
+ [[http://localhost/plex/]] opens ~This XML file does not appear to have any style information associated with it. The document tree is shown below.~ message with some xml file
+ http://localhost/ha/ opens only app logo (might be expected)

* Docker Compose
:PROPERTIES:
:header-args: :tangle docker-compose.yml
:END:
** Init Section
Version
#+begin_src yaml
version: '2'
#+end_src

Volumes
#+begin_src yaml
volumes:
  certs:
#+end_src

Networks
#+begin_src yaml
networks:
  proxy-tier:
#+end_src

Start services block
#+begin_src yaml
services:
#+end_src

** Reverse Proxy
#+begin_src yaml
  proxy:
    container_name: 'reverse-proxy'
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:ro
      - ./reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier
#+end_src

** App1
#+begin_src yaml
  app1:
    container_name: "app1"
    image: nginx
    restart: always
    volumes:
      - ./app1/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app1/www:/var/www:ro
    networks:
      - proxy-tier
#+end_src

** App2
#+begin_src yaml
  app2:
    container_name: "app2"
    image: nginx
    restart: always
    volumes:
      - ./app2/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app2/www:/var/www:ro
    networks:
      - proxy-tier
#+end_src

** Hello World
#+begin_src yaml
  hello-world:
    container_name: "hello-world"
    image: nginx
    restart: always
    ports:
      - 8080:80
    networks:
      - proxy-tier
#+end_src

** Plex
https://github.com/plexinc/pms-docker
#+begin_src yaml
  plex-media-server:
    container_name: 'plex-media-server'
    hostname: 'plex-media-server'
    image: plexinc/pms-docker
    restart: unless-stopped
    ports:
      - 32400:32400
    # env_file:
    #   - secrets/plex.env
    environment:
      - TZ=America/Toronto
    networks:
      - proxy-tier
#+end_src

* Nginx Config
** Proxy
#+begin_src conf :tangle reverse-proxy/default.conf
# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;

access_log off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

error_log /dev/stderr;

# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Original-URI $request_uri;

# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";

upstream home-assistant {
    server art-s.tplinkdns.com:8123;
}

upstream app1 {
    server app1:8080;
}

upstream app2 {
    server app2:8080;
    keepalive 32;
}

upstream plex-media-server {
    server plex-media-server:32400;
    keepalive 32;
}

#===============================================================================

server {
    listen       80;
    server_name  art-s.tplinkdns.com;
    access_log   /var/log/nginx/access.log;

    # Do not HTTPS redirect Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        auth_basic off;
        auth_request off;
        allow all;
        root /usr/share/nginx/html;
        try_files $uri =404;
        break;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen       443 ssl http2;
    server_name  art-s.tplinkdns.com;
    access_log   /var/log/nginx/access.log;

    # ssl
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/art-s.tplinkdns.com.crt;
    ssl_certificate_key /etc/nginx/certs/art-s.tplinkdns.com.key;
    ssl_dhparam /etc/nginx/certs/art-s.tplinkdns.com.dhparam.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/art-s.tplinkdns.com.chain.pem;

    # REVIEW from auto proxy
    set $sts_header "";
    if ($https) {
        set $sts_header "max-age=31536000";
    }
    add_header Strict-Transport-Security $sts_header always;

    # REVIEW (plex) Disable buffering - send to the client as soon as the data is received from Plex.
    proxy_redirect off;
    proxy_buffering off;

    location ~* ^/ha/(.*)$ {
        proxy_pass https://home-assistant/$1$is_args$args;
    }

    location ~* ^/app1/(.*)$ {
        proxy_pass http://app1/$1$is_args$args;
    }

    location ~* ^/app2/(.*)$ {
        proxy_pass http://app2/$1$is_args$args;
    }

    location ~* ^/plex/(.*)$ {
        proxy_pass http://plex-media-server/$1$is_args$args;

        # Set headers for Plex server.
        proxy_http_version 1.1;
        proxy_set_header Referer localhost; # Forces Plex to see all connections from the proxy as local
        proxy_set_header Origin $scheme://localhost:$server_port; # Forces Plex to see all connections from the proxy as local
        proxy_set_header Accept-Encoding ""; # Disables compression between Plex and Nginx
    }

    location / {
        return 404;
    }
}
#+end_src

** App1
#+begin_src conf :tangle app1/default.conf
server {
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;

    root /var/www;

    location / {
        index  index.html index.htm;
    }

    location /sub {
        index  sub.html;
    }
}
#+end_src

** App2
#+begin_src conf :tangle app2/default.conf
server {
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;

    root /var/www;

    location / {
        index  index.html index.htm;
    }

    location /sub {
        index  sub.html;
    }
}
#+end_src

* index.html
** App1
#+begin_src html :tangle app1/www/index.html
<!DOCTYPE html>
<html>
  <head>
    <title>Artem Title!</title>
    <style>
      html {
        color-scheme: light dark;
      }
      body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
      }
    </style>
  </head>
  <body>
    <h1>App 1!</h1>
    <a href="sub/">Link</a>
    <p>
      If you see this page, the nginx web server is successfully installed and
      working. Further configuration is required.
    </p>

    <p>
      For online documentation and support please refer to
      <a href="http://nginx.org/">nginx.org</a>.<br />
      Commercial support is available at
      <a href="http://nginx.com/">nginx.com</a>.
    </p>

    <p><em>Thank you for using nginx.</em></p>
  </body>
</html>
#+end_src

#+begin_src html :tangle app1/www/sub/sub.html
OK 1
#+end_src

** App2
#+begin_src html :tangle app2/www/index.html
<!DOCTYPE html>
<html>
  <head>
    <title>Artem Title!</title>
    <style>
      html {
        color-scheme: light dark;
      }
      body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
      }
    </style>
  </head>
  <body>
    <h1>App 2!</h1>
    <a href="sub/">Link</a>
    <p>
      If you see this page, the nginx web server is successfully installed and
      working. Further configuration is required.
    </p>

    <p>
      For online documentation and support please refer to
      <a href="http://nginx.org/">nginx.org</a>.<br />
      Commercial support is available at
      <a href="http://nginx.com/">nginx.com</a>.
    </p>

    <p><em>Thank you for using nginx.</em></p>
  </body>
</html>
#+end_src

#+begin_src html :tangle app2/www/sub/sub.html
OK 2
#+end_src
